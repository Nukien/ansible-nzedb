[mysqld]
# configurations by nZEDb
innodb_file_per_table = 1
max_allowed_packet = 16M
group_concat_max_len = 8192

# https://gist.github.com/terwey/4723764
innodb_flush_log_at_trx_commit   = 0
# Per http://www.mysqlperformanceblog.com/2007/11/03/choosing-innodb_buffer_pool_size/
innodb_flush_method              = O_DIRECT

innodb_checksum_algorithm        = crc32

# http://www.tocker.ca/2013/09/17/what-to-tune-in-mysql-56-after-installation.html
# http://mysqlha.blogspot.ca/2013/05/configuring-innodb-for-mysql-56.html
innodb_flush_neighbors           = 0

# http://spamassassin.1065346.n5.nabble.com/Bayes-MySQL-and-innoDB-settings-question-td66854.html
# http://anothermysqldba.blogspot.com/2013/05/how-to-tune-mysql-server.html
# Total ram avaliable = {{ ansible_memtotal_mb }}M so {{ innodb_buffer_percent }}% = {{ (ansible_memtotal_mb * innodb_buffer_percent / 100) | int }}M
innodb_buffer_pool_size          = {{ innodb_buffer_pool_size }}
# Help mysql to use all available cores
# https://dba.stackexchange.com/questions/27328/how-large-should-be-mysql-innodb-buffer-pool-size
# About 1-2G per innodb_buffer_pool_instance
innodb_buffer_pool_instances     = {{ innodb_buffer_pool_instances }}
innodb_change_buffering = all
innodb_max_dirty_pages_pct = 90

innodb_log_buffer_size           = 100M
# Total innodb_log_file_size should be approx 20-25% of innodb_buffer_pool_size
# So total = {{ (ansible_memtotal_mb * innodb_buffer_percent / 100 * 0.20) | int }}M, divided into 2 logfiles of {{ innodb_log_file_size }}
innodb_log_file_size             = {{ innodb_log_file_size }}

# If on M.2 can use about 30000, SSD maybe 20000, with max about 30% higher ?
# See: http://www.tocker.ca/2013/09/17/what-to-tune-in-mysql-56-after-installation.html
innodb_io_capacity = "{{ innodb_io_capacity }}"
innodb_io_capacity_max = "{{ innodb_io_capacity_max }}"
# Set close to iop_max - http://mysqlha.blogspot.lu/2013/05/configuring-innodb-for-mysql-56.html
innodb_lru_scan_depth  = "{{ innodb_lru_scan_depth }}"

innodb_thread_concurrency = 0

# Doing about 4 threads per core - be sure these values from ansible make sense
# Calculation is ansible_processor_vcpus * 4
    # ansible_processor_cores = {{ansible_processor_cores}}
    # ansible_processor_count = {{ansible_processor_count}}
    # ansible_processor_threads_per_core = {{ansible_processor_threads_per_core}}
    # ansible_processor_vcpus {{ansible_processor_vcpus}}
innodb_read_io_threads  = "{{ (ansible_processor_vcpus * 4) }}"
innodb_write_io_threads = "{{ (ansible_processor_vcpus * 4) }}"
# http://www.samsung.com/semiconductor/global/file/insight/2017/04/best-practices-for-mysql-with-ssds-0.pdf
innodb_adaptive_hash_index = OFF

# Releases innodb row locks as they are not needed
# http://www.percona.com/blog/2012/08/28/differences-between-read-committed-and-repeatable-read-transaction-isolation-levels/
transaction-isolation=READ-COMMITTED

# dump/restore buffer pool, faster buffer pool warmup
innodb_buffer_pool_dump_at_shutdown = ON
innodb_buffer_pool_load_at_startup  = ON

#
# * Fine Tuning
#
# key_buffer_size is about 15% of total ram {{ ansible_memtotal_mb}}M
key_buffer_size         = {{ key_buffer_size }}
join_buffer_size        = 8M
read_buffer_size        = 4M

# default table_open_cache is 400
table_open_cache        = 1000
table_definition_cache  = 500

#
# * Logging and Replication
#
expire_logs_days            = 10


