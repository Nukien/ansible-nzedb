---

- name: Ensure config dirs are there
  file:
    path: "/home/{{ username }}/{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
  with_items:
    - .profile.d

- block:
  # These tasks should run always, even with ansible-playbook --check

  # Need to check if /usr/lib/apt/apt.systemd.daily is running 1st and wait for it
  # to finish before this
  - name: Check for apt.systemd.daily
    shell: ps axf | grep apt.systemd.daily | grep -v grep | cut -c1-5 | tr -d ' ' | head -1
    ignore_errors: yes
    register: apt_systemd_daily
    changed_when: false
  
  - name: Wait for apt.systemd.daily ({{ apt_systemd_daily.stdout }}) to exit
    wait_for:
      path: "/proc/{{ apt_systemd_daily.stdout }}/cmdline"
      state: absent
      timeout: 180
    when: apt_systemd_daily.stdout != ""

  - name: Install apt_repository and apt-check requirements
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
      - automake
      - build-essential
      - git
      - python-apt
      - python-pip
      - software-properties-common
      - update-notifier-common
  #
  check_mode: no

- name: Fetch yydecode
  unarchive:
    src: "https://ayera.dl.sourceforge.net/project/yydecode/yydecode/{{ nzedb_yydecode_version }}/yydecode-{{ nzedb_yydecode_version }}.tar.gz"
    dest: /usr/src/
    remote_src: yes
    creates: "/usr/src/yydecode-{{ nzedb_yydecode_version }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0755
  
- name: Compile yydecode
  command: "{{ item }}"
  args:
    chdir: "/usr/src/yydecode-{{ nzedb_yydecode_version }}"
    creates: "/usr/src/yydecode-{{ nzedb_yydecode_version }}/src/yydecode"
  with_items:
    - ./configure
    - make

- name: Create local man1 directory
  file:
    path: /usr/local/share/man/man1
    state: directory

- name: Link yydecode into place
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
    force: yes
  with_items:
    - { src: "/usr/src/yydecode-{{ nzedb_yydecode_version }}/src/yydecode",   dest: /usr/local/bin/yydecode }
    - { src: "/usr/src/yydecode-{{ nzedb_yydecode_version }}/doc/yydecode.1", dest: /usr/local/man/man1/yydecode.1 }
  
- name: Install php-yenc-extension
  apt:
    deb: "https://github.com/niel/php-yenc/releases/download/v{{ nzedb_yenc_version }}/php7.0-yenc_{{ nzedb_yenc_version }}_amd64.deb"
 
- name: Fetch rar/unrar v{{ rar_version }}
  unarchive:
    src: "{{ rar_url }}"
    remote_src: yes
    dest: /usr/src/
    creates: /usr/src/rar

- name: Copy rar/unrar files into place
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0755
    remote_src: true
  with_items:
    - { src: "/usr/src/rar/rar",         dest: /usr/local/bin/rar }
    - { src: "/usr/src/rar/unrar",       dest: /usr/local/bin/unrar }
    - { src: "/usr/src/rar/default.sfx", dest: /usr/local/lib/default.sfx }

- name: Clone par2 from github to temp location
  git:
    repo: https://github.com/Parchive/par2cmdline.git
    dest: /usr/src/par2cmdline
    update: no

- name: par2 - automake
  command: ./automake.sh
  args:
    chdir: /usr/src/par2cmdline
    creates: /usr/src/par2cmdline/aclocal.m4
  register: par2_automake
  failed_when: par2_automake.rc != 0
  changed_when: false

- name: par2 - configure
  command: ./configure
  args:
    chdir: /usr/src/par2cmdline
    creates: /usr/src/par2cmdline/Makefile
  register: par2_configure
  failed_when: par2_configure.rc != 0
  changed_when: false

- name: par2 - build
  command: make
  args:
    chdir: /usr/src/par2cmdline
    creates: /usr/src/par2cmdline/par2
  register: par2_make1
  failed_when: par2_make1.rc != 0
  changed_when: false

- name: par2 - check
  command: make check
  args:
    chdir: /usr/src/par2cmdline
  register: par2_make_check
  failed_when: par2_make_check.rc != 0
  changed_when: false

- name: par2 - install
  shell: make install
  args:
    chdir: /usr/src/par2cmdline
    creates: /usr/local/bin/par2
  register: par2_make_install
  failed_when: par2_make_install.rc != 0
  changed_when: false

- name: Install ps_mem
  pip:
    name: ps_mem
    state: latest

